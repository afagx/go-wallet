// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api/trading.proto

package api

import (
	proto1 "code.vegaprotocol.io/go-wallet/proto"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubmitTransactionRequest_Type int32

const (
	SubmitTransactionRequest_TYPE_UNSPECIFIED SubmitTransactionRequest_Type = 0
	// The transaction will be submitted without waiting for response.
	SubmitTransactionRequest_TYPE_ASYNC SubmitTransactionRequest_Type = 1
	// The transaction will be submitted, and blocking until the
	// tendermint mempool return a response.
	SubmitTransactionRequest_TYPE_SYNC SubmitTransactionRequest_Type = 2
	// The transaction will submitted, and blocking until the tendermint
	// network will have committed it into a block.
	SubmitTransactionRequest_TYPE_COMMIT SubmitTransactionRequest_Type = 3
)

var SubmitTransactionRequest_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "TYPE_ASYNC",
	2: "TYPE_SYNC",
	3: "TYPE_COMMIT",
}

var SubmitTransactionRequest_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"TYPE_ASYNC":       1,
	"TYPE_SYNC":        2,
	"TYPE_COMMIT":      3,
}

func (x SubmitTransactionRequest_Type) String() string {
	return proto.EnumName(SubmitTransactionRequest_Type_name, int32(x))
}

func (SubmitTransactionRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{0, 0}
}

type SubmitTransactionRequest struct {
	Tx                   *proto1.SignedBundle          `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Type                 SubmitTransactionRequest_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.SubmitTransactionRequest_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SubmitTransactionRequest) Reset()         { *m = SubmitTransactionRequest{} }
func (m *SubmitTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionRequest) ProtoMessage()    {}
func (*SubmitTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{0}
}

func (m *SubmitTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionRequest.Unmarshal(m, b)
}
func (m *SubmitTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionRequest.Merge(m, src)
}
func (m *SubmitTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionRequest.Size(m)
}
func (m *SubmitTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionRequest proto.InternalMessageInfo

func (m *SubmitTransactionRequest) GetTx() *proto1.SignedBundle {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *SubmitTransactionRequest) GetType() SubmitTransactionRequest_Type {
	if m != nil {
		return m.Type
	}
	return SubmitTransactionRequest_TYPE_UNSPECIFIED
}

type SubmitTransactionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionResponse) Reset()         { *m = SubmitTransactionResponse{} }
func (m *SubmitTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionResponse) ProtoMessage()    {}
func (*SubmitTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{1}
}

func (m *SubmitTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionResponse.Unmarshal(m, b)
}
func (m *SubmitTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionResponse.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionResponse.Merge(m, src)
}
func (m *SubmitTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionResponse.Size(m)
}
func (m *SubmitTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionResponse proto.InternalMessageInfo

func (m *SubmitTransactionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterEnum("api.SubmitTransactionRequest_Type", SubmitTransactionRequest_Type_name, SubmitTransactionRequest_Type_value)
	proto.RegisterType((*SubmitTransactionRequest)(nil), "api.SubmitTransactionRequest")
	proto.RegisterType((*SubmitTransactionResponse)(nil), "api.SubmitTransactionResponse")
}

func init() { proto.RegisterFile("proto/api/trading.proto", fileDescriptor_efb848134bda36f4) }

var fileDescriptor_efb848134bda36f4 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x51, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xff, 0xed, 0xc6, 0x7f, 0x7a, 0x87, 0xb3, 0x06, 0xc1, 0x3a, 0x50, 0x46, 0x9f, 0x86,
	0x60, 0x0a, 0x15, 0x7d, 0x77, 0xb5, 0x42, 0xc1, 0xcd, 0xd1, 0xd6, 0x87, 0x09, 0x22, 0x59, 0x1b,
	0x4a, 0xa0, 0x26, 0xb1, 0x49, 0x75, 0xfb, 0x7e, 0x7e, 0x30, 0x31, 0x55, 0x5f, 0x74, 0xbe, 0xe5,
	0x77, 0x6e, 0x72, 0x0f, 0xe7, 0x04, 0x0e, 0x64, 0x2d, 0xb4, 0xf0, 0x89, 0x64, 0xbe, 0xae, 0x49,
	0xc1, 0x78, 0x89, 0x8d, 0x82, 0x3a, 0x44, 0xb2, 0xa1, 0xd3, 0x4e, 0x5f, 0x68, 0x49, 0x5a, 0xd9,
	0x7b, 0xb3, 0xc0, 0x4d, 0x9b, 0xe5, 0x13, 0xd3, 0x59, 0x4d, 0xb8, 0x22, 0xb9, 0x66, 0x82, 0x27,
	0xf4, 0xb9, 0xa1, 0x4a, 0x23, 0x0f, 0x6c, 0xbd, 0x72, 0xad, 0x91, 0x35, 0xee, 0x07, 0x08, 0x9b,
	0x57, 0x29, 0x2b, 0x39, 0x2d, 0x26, 0x0d, 0x2f, 0x2a, 0x9a, 0xd8, 0x7a, 0x85, 0x2e, 0xa0, 0xab,
	0xd7, 0x92, 0xba, 0xf6, 0xc8, 0x1a, 0x0f, 0x02, 0x0f, 0x13, 0xc9, 0xf0, 0xa6, 0x85, 0x38, 0x5b,
	0x4b, 0x9a, 0x98, 0xfb, 0xde, 0x0d, 0x74, 0x3f, 0x08, 0xed, 0x83, 0x93, 0x2d, 0xe6, 0xd1, 0xe3,
	0xdd, 0x2c, 0x9d, 0x47, 0x61, 0x7c, 0x1d, 0x47, 0x57, 0xce, 0x3f, 0x34, 0x00, 0x30, 0xea, 0x65,
	0xba, 0x98, 0x85, 0x8e, 0x85, 0x76, 0x60, 0xdb, 0xb0, 0x41, 0x1b, 0xed, 0x42, 0xdf, 0x60, 0x78,
	0x3b, 0x9d, 0xc6, 0x99, 0xd3, 0xf1, 0xce, 0xe1, 0xf0, 0x17, 0x53, 0x25, 0x05, 0x57, 0x14, 0xb9,
	0xd0, 0x53, 0x4d, 0x9e, 0x53, 0xa5, 0x4c, 0x96, 0xad, 0xe4, 0x0b, 0x83, 0x07, 0xe8, 0x7d, 0xb6,
	0x84, 0x12, 0xd8, 0xfb, 0xb1, 0x01, 0x1d, 0xfd, 0x19, 0x67, 0x78, 0xbc, 0x69, 0xdc, 0x1a, 0x4f,
	0x4e, 0xee, 0xc7, 0xb9, 0x28, 0xa8, 0x69, 0xce, 0xd4, 0x9d, 0x8b, 0x0a, 0x33, 0xe1, 0x97, 0xe2,
	0xf4, 0x95, 0x54, 0x15, 0xd5, 0xfe, 0xf7, 0x6f, 0x2d, 0xff, 0x9b, 0xe3, 0xd9, 0x7b, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xb6, 0x65, 0xa0, 0x42, 0xc1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TradingClient is the client API for Trading service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradingClient interface {
	// Submit a signed transaction
	SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error)
}

type tradingClient struct {
	cc *grpc.ClientConn
}

func NewTradingClient(cc *grpc.ClientConn) TradingClient {
	return &tradingClient{cc}
}

func (c *tradingClient) SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error) {
	out := new(SubmitTransactionResponse)
	err := c.cc.Invoke(ctx, "/api.trading/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TradingServer is the server API for Trading service.
type TradingServer interface {
	// Submit a signed transaction
	SubmitTransaction(context.Context, *SubmitTransactionRequest) (*SubmitTransactionResponse, error)
}

func RegisterTradingServer(s *grpc.Server, srv TradingServer) {
	s.RegisterService(&_Trading_serviceDesc, srv)
}

func _Trading_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).SubmitTransaction(ctx, req.(*SubmitTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Trading_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.trading",
	HandlerType: (*TradingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitTransaction",
			Handler:    _Trading_SubmitTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api/trading.proto",
}
